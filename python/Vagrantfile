# Reference: https://www.vagrantup.com/docs/provisioning/shell.html

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"
  config.vm.box_version = "20191030.0.0"
  config.vm.box_check_update = true
  config.vbguest.auto_update = false if Vagrant.has_plugin?("vagrant-vbguest")

  config.vm.define "pythonvm" do |python_host|
    python_host.vm.hostname = "pythonvm"
    python_host.vm.network "public_network", bridge: "wlo1"

    python_host.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.memory = 2_048
      vb.cpus = 2
    end

    python_host.ssh.insert_key = false
    python_host.ssh.private_key_path = %w[~/.vagrant.d/insecure_private_key ~/.ssh/vagrant_vm_rsa]
    python_host.vm.provision "file",
                             source: "~/.ssh/vagrant_vm_rsa.pub",
                             destination: "~/.ssh/vagrant_vm_rsa.pub"
    python_host.vm.provision "shell",
                             inline: <<-SHELL
      cat /home/vagrant/.ssh/vagrant_vm_rsa.pub > /home/vagrant/.ssh/authorized_keys
    SHELL
    python_host.vm.provision "shell", path: "setup_python3.sh"
  end

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
end
