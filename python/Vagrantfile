# Reference: https://www.vagrantup.com/docs/provisioning/shell.html

pyenv_prerequisites = <<-SCRIPT
  echo "Installing prerequisites for pyenv"
  apt-get update
  apt-get install -y curl git gcc make zlib1g-dev \
  libbz2-dev libreadline-dev libsqlite3-dev libssl-dev
SCRIPT

pyenv_install = <<-SCRIPT
  echo "Installing pyenv"
  curl https://pyenv.run | bash

  # NOTE: .bashrc not executed in non interactive shell
  export PATH="/home/vagrant/.pyenv/bin:$PATH"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"

  echo "Installing python 3.6.8 and pipenv"
  pyenv --version
  pyenv install 3.6.8 && pyenv global 3.6.8
  python --version

  echo "Installing pipenv"
  pip install --user pipenv
  export PATH="/home/vagrant/.local/bin:$PATH"
  pipenv --version

  echo "Adding entries to bashrc"
  echo 'export PATH="/home/vagrant/.pyenv/bin:$PATH"' >> ~/.bashrc
  echo 'eval "$(pyenv init -)"' >> ~/.bashrc
  echo 'eval "$(pyenv virtualenv-init -)"' >> ~/.bashrc
  echo 'export PATH="/home/vagrant/.local/bin:$PATH"' >> /home/vagrant/.bashrc
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"
  config.vm.box_version = "20191030.0.0"
  config.vm.box_check_update = true

  config.vm.define "pythonvm" do |python_host|
    python_host.vm.hostname = "pythonvm"
    python_host.vm.network "public_network", bridge: "wlo1"

    python_host.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.memory = 2_048
      vb.cpus = 2
    end

    python_host.vm.provision "shell", inline: pyenv_prerequisites
    python_host.vm.provision "shell" do |s| 
        s.inline = pyenv_install
        s.privileged = false
    end
  end

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
end
