# Basic Ubuntu official image
# can make execute a shell script using vm.provision option as shell
# Inline script can be executed using inline option and a shell script
# can be executed using path option
# Reference: https://www.vagrantup.com/docs/provisioning/shell.html

Vagrant.configure("2") do |config|
  config.vm.provision "shell", inline: "echo \"Hello World\""
  config.vm.box = "ubuntu/bionic64"
  config.vm.box_version = "20191030.0.0"
  config.vm.box_check_update = true
  config.vbguest.auto_update = false if Vagrant.has_plugin?("vagrant-vbguest")

  # The hostname set for the VM should only contain letters, numbers,
  # hyphens or dots. It cannot start with a hyphen or dot.
  config.vm.define "ubuntu-vm" do |ubuntu_vm|
    ubuntu_vm.vm.hostname = "ubuntu-vm"

    # This is required so that the VM can be accessed through the IP from the host
    ubuntu_vm.vm.network "public_network", bridge: "wlo1", ip: "192.168.1.125"

    ubuntu_vm.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.memory = 2_048
      vb.cpus = 2
    end
    ubuntu_vm.ssh.insert_key = false
    ubuntu_vm.vm.provision "file",
                           source: "~/.ssh/vagrant_vm_rsa.pub", destination: "~/.ssh/id_rsa.pub"
  end

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"
end
